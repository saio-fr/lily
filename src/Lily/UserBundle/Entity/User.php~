<?php

namespace Lily\UserBundle\Entity;

use FOS\UserBundle\Model\User as BaseUser;

use Doctrine\ORM\Mapping as ORM;

use Symfony\Component\Validator\Constraints as Assert;

use JMS\Serializer\Annotation\ExclusionPolicy;
use JMS\Serializer\Annotation\Expose;

use Symfony\Component\HttpFoundation\File\File;
use Symfony\Bridge\Doctrine\Validator\Constraints\UniqueEntity;

/**
 * User
 *
 * @ORM\Table()
 * @ExclusionPolicy("all")
 * @ORM\Entity()
 * @UniqueEntity(fields={"username"}, message="Ce nom d'utilisateur existe déjà.")
 * @UniqueEntity(fields={"email"}, message="Cet email est déjà utilisé.")
 */
class User extends BaseUser
{
    /**
     * @var integer
     *
     * @ORM\Column(name="id", type="integer")
     * @ORM\Id
     * @ORM\GeneratedValue(strategy="AUTO")
     */
    protected $id;

	/**
     * @ORM\ManyToOne(targetEntity="Lily\UserBundle\Entity\Client", inversedBy="users")
     */
    private $client;
    
    /**
     * @ORM\OneToOne(targetEntity="Lily\UserBundle\Entity\UserConfig", cascade={"persist", "remove"})
     */
    private $config;
    
    /**
     * @var string
     *
     * @ORM\Column(name="lastname", type="string", length=30, nullable=true)
     * @Assert\Length(
     *      max = "30",
     *      maxMessage = "La valeur ne peux excéder {{ limit }} caractères"
     * )
     * @Assert\NotBlank()
     * @Expose
     */
    private $lastname;
    
    /**
     * @var string
     *
     * @ORM\Column(name="firstname", type="string", length=30, nullable=true)
     * @Assert\Length(
     *      max = "30",
     *      maxMessage = "La valeur ne peux excéder {{ limit }} caractères"
     * )
     * @Assert\NotBlank()
     * @Expose
     */
    private $firstname;
    
    /**
     * @var string
     *
     * @ORM\Column(name="phone", type="string", length=20, nullable=true)
     * @Assert\Length(
     *      min = "10",
     *      max = "20",
     *      minMessage = "La valeur doit faire au moins {{ limit }} caractères",
     *      maxMessage = "La valeur ne peux excéder {{ limit }} caractères"
     * )
     * @Expose
     */
    private $phone;
    
    /**
     * @var string
     *
     * @ORM\Column(name="post", type="string", length=50, nullable=true)
     * @Assert\Length(
     *      max = "50",
     *      maxMessage = "La valeur ne peux excéder {{ limit }} caractères"
     * )
     * @Expose
     */
    private $post;
    
    /**
     * @var string
     *
     * @ORM\ManyToMany(targetEntity="Lily\UserBundle\Entity\Service", cascade={"persist"})
     * @Expose
     */
    private $services;
    
    /**
     * @var string
     *
     * @ORM\Column(name="country", type="string", length=50, nullable=true)
     * @Assert\Length(
     *      max = "50",
     *      maxMessage = "La valeur ne peux excéder {{ limit }} caractères"
     * )
     * @Expose
     */
    private $country;
    
    /**
     * @Assert\Email()
     * @Assert\NotBlank()
     */
    protected $email;

    /**
     * @Assert\NotBlank()
     */
    protected $username;

    /**
     * Constructor
     */
    public function __construct()
    {
        $this->services = new \Doctrine\Common\Collections\ArrayCollection();
    }
}

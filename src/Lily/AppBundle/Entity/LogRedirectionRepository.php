<?php

namespace Lily\AppBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * LogRedirectionRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class LogRedirectionRepository extends EntityRepository
{
	
	public function redirections($from, $to, $interval = null) {
		
		$qb = $this->createQueryBuilder('r');
        
        // UNIX_TIMESTAMP is a personalized dql function, calling the correspondant sql function
        $qb->select('count(r) as value')
           ->where('UNIX_TIMESTAMP(r.date) >= :start')
           ->setParameter('start', $from)
           ->andWhere('UNIX_TIMESTAMP(r.date) < :end')
           ->setParameter('end', $to);

        if($interval) {
           $qb->addSelect('ROUND(UNIX_TIMESTAMP(r.date)/(:interval)) as intervalId')
              ->setParameter('interval', $interval)
              ->groupBy('intervalId');
            return $qb->getQuery()->getResult();
        } else {
            return $qb->getQuery()->getSingleScalarResult() ?: 0;
        }
		          
	}
	
	public function mails($from, $to) {
		
		$qb = $this->createQueryBuilder('r');
		
		$qb->select('count(r)')
		   ->where('r.date >= :from')
		   ->setParameter('from', $from)
		   ->andWhere('r.date <= :to')
		   ->setParameter('to', $to)
		   ->andWhere('r.canal = :canal')
		   ->setParameter('canal', 'mail');
		
		return $qb->getQuery()
		          ->getSingleScalarResult();
		          
	}
	
	public function phones($from, $to) {
		
		$qb = $this->createQueryBuilder('r');
		
		$qb->select('count(r)')
		   ->where('r.date >= :from')
		   ->setParameter('from', $from)
		   ->andWhere('r.date <= :to')
		   ->setParameter('to', $to)
		   ->andWhere('r.canal = :canal')
		   ->setParameter('canal', 'phone');
		
		return $qb->getQuery()
		          ->getSingleScalarResult();
		          
	}
	
}
